================================================================================
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
================================================================================

$Id$

                         =================================
                         Apache Tomcat 6.0 Patch Proposals
                         =================================


RELEASE SHOWSTOPPERS:


PATCHES ACCEPTED TO BACKPORT:
  [ start all new proposals below, under PATCHES PROPOSED. ]

PATCHES PROPOSED TO BACKPORT:
  [ New proposals should be added at the end of the list ]

* Fix issue where the first request for a deleted JSPs returns as if the JSP
  still exists.
  http://svn.apache.org/viewvc?view=rev&revision=683969
  +1: markt, funkman
   0: remm (looks risky, very minor problem), fhanik - minor problem
  -1: 

* Backport cleanup of semantics of thisAccessedTime and
  lastAccessedTime for sessions:
  - preparational whitespace changes
    http://svn.apache.org/viewvc?rev=711695&view=rev
  - Give thisAccessedTime and lastAccessedTime for sessions
    a clear semantics:
    http://svn.apache.org/viewvc?rev=711711&view=rev
    - thisAccessedTime will be updated at the beginning and
      at the end of session use
    - lastAccessedTime will only be updated at the end of
      session use
    This means:
    - lastAccessedTime is the last access time of a session
      disregarding any request still being processed on.
      So this is good to use even from within a request
      to detect when its own session has been used last before.
    - thisAccessedTime already gets updated when a new request 
      disregarding any request still being processed on.
      So this is better for any idleness check or information.
    - thisAccessedTime >= lastAccessedTime always
  - Port from StandardSession to DeltaSession
    http://svn.apache.org/viewvc?rev=711714&view=rev
  - Expose thisAccessedTime via the session interface
    and ManagerBase, so we can use it from outside the session.
    http://svn.apache.org/viewvc?rev=711716&view=rev
  - Make the classes checking session idleness use thisAccessedTime.
    http://svn.apache.org/viewvc?rev=711720&view=rev
    This is not for invalidation, only for displaying
    idle times and making persistance decisions.
  +1: rjung
   0: billbarker: generally agree with remm that this is too big of a change for the stable branch
                 but could agree to some of it if it was split into parts
   0: markt: Agree with Bill - smaller parts would be better
  -1: remm: no for TC 6.0
  -1: funkman : api change in Session.java for .x.x release

* Fix Close Stream at WebappClassLoader after read error
  http://svn.apache.org/viewvc?rev=772872&view=rev 
  +1: pero, funkman
  -0: kkolinko: http://marc.info/?l=tomcat-dev&m=124192105131636&w=2
  -1:

* Dont try to report thread counts when using an executor from outside
  http://people.apache.org/~fhanik/connector-thread-report.patch
  +1: fhanik, kkolinko
  +1: markt - would 0 make more sense rather than -1? Happy with either
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47369.
  http://svn.apache.org/viewvc?rev=784879&view=rev
  +1: fhanik, markt, mturk, rjung
  -1: 

* When throwing Non-serializable exception, mark which argument was
  non-serializable to help tracing the cause when developing.
  http://svn.apache.org/viewvc?rev=713953&view=rev
  http://svn.apache.org/viewvc?rev=714002&view=rev
  6.0.x version of the patch:
  http://people.apache.org/~mturk/tomcat/setAttribute1.iae.patch
  +1: mturk, kkolinko, markt
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=38797
  Reverts previous fix for
  https://issues.apache.org/bugzilla/show_bug.cgi?id=37933 and implements an
  alternative that doesn't have the side effects described in 38797
  http://svn.apache.org/viewvc?rev=791224&view=rev
  +1: markt, kkolinko
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47478
  https://svn.apache.org/viewcvs.cgi?view=rev&rev=791524
  +1: fhanik, rjung, markt
  -1: 
  
* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=39231
  http://people.apache.org/~markt/patches/2009-08-16-bug39231.patch
  JAAS LoginContext expects a call to logout()
  +1: markt
  -1: 
 
* Improve NIO connector shutdown time by doing shutdowns in parallel
  and with a timeout
  http://svn.apache.org/viewvc?view=rev&revision=791914
  +1: fhanik, markt, kkolinko
  -1: 
  kkolinko: (
    Some nit-picking:
    1. I think that it is better to create the stopLatch in the NioEndpoint#start()
    method right before the array of Pollers is created, instead of NioEndpoint#init().
    And to pass a reference to it to the Poller (as an argument in Poller
    constructor).
    That is because otherwise if you call stop() start() the stopLatch won't be in
    its initial condition, and because the count of pollers can be changed between
    init() and start(). Just a theory, though.
    
    2. In NioEndpoint.Poller#run():
    - if the Poller was looping with paused=true, is there a need to call
    events() before exiting the loop on if (close) ?
    - there are several ways to exit the loop: two if(close), one while
     (running), and may be exceptions. The first if(close) does not call
     selector.close(). And if you exit because of running = false there is
     no call to timeout(0, false); and selector.close().
    - there is special processing code for OutOfMemoryError, but inside the
     loop, and in events() method, you catch any Throwable.
    - it would be better to put stopLatch.countDown() inside a finally{} block
    3. In NioEndpoint.Poller#destroy() there is comment ("// Wait...").
    Is it still relevant? I do not see any waiting there.
  )

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47515
  https://issues.apache.org/bugzilla/attachment.cgi?id=23973
  +1: fhanik, kkolinko, markt
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47413
  First part of a composite EL expression "${a}${b}" was not coerced to String
  Without coercion, the concatenation of ((Object)null) + string results in
  "null" being printed.
  http://svn.apache.org/viewvc?rev=795466&view=rev
  +1: kkolinko, markt, rjung
  -1: 

* Fix the JDBC driver clean-up
  http://svn.apache.org/viewvc?view=rev&revision=789389
  +1: markt, rjung
  -1: 
  rjung: I don't really like the implicit 4KB class size limit.
  I understand your rationale, but we don't know enough about other JVMs
  and the future in general.
  I think it would be nice to improve in a second step by resizing the
  array according to the class size. AFAIK it's not a performance critical path.

* Port Active Directory improvements to JNDIREalm from trunk
  Patch testing successfully by willing volunteer on the users list
  http://people.apache.org/~markt/patches/2009-08-06-ADforJNDIRealm.patch
  +1: markt, kkolinko
  -1: 
  kkolinko: (
     There are several (two) places with a loop printing containerLog.debug(
     "Found role: " + it.next()); It would be better to prepare the whole string
     of roles and print it at once.
  )

* Port TLD processing improvements from trunk
  There have been quite a few changes to TLD processing and they are tightly
  coupled. Therefore, this proposal is a series of patches and the patches
  need to be applied in order. Even then the patches do not apply completely
  cleanly so a rolled up patch has been provided at each stage.
  Note: The JSP TCK passes with the full set of patches applied.
  The benefit is twofold. First a number of edge case bugs I came across are
  fixed. The short version is that the Catalina code and the Jasper code did
  things differently. As well as the inherent inconsistencies (and hence bugs)
  this created it also made it much harder to add the additional functionality
  I was trying to add for embeddability. Which brings me to the second benefit.
  With these fixes in place, the changes I was trying to make (patch to follow
  when I have done more testing) for embeddability become possible.
  Step 1: Clean-up
  http://svn.apache.org/viewvc?view=rev&revision=647344
  +1: markt
  -1: 
  Step 2: Make validation configuration per-context
  http://svn.apache.org/viewvc?view=rev&revision=751502
  http://people.apache.org/~markt/patches/2009-08-06-TLD-improvements-steps-1-2.patch (Steps 1-2)
  +1: markt
  -1: 
  Step 3: Track and don't process duplicate TLDs
  http://svn.apache.org/viewvc?view=rev&revision=793621
  http://people.apache.org/~markt/patches/2009-08-06-TLD-improvements-steps-1-3.patch (Steps 1-3)
  +1: markt
  -1: 
  Step 4: Sync Catalina and Jasper code so a) they have the same behaviour and
  b) use the same code so they are easier to keep in sync.
  http://svn.apache.org/viewvc?view=rev&revision=795143
  http://svn.apache.org/viewvc?view=rev&revision=795767
  http://svn.apache.org/viewvc?view=rev&revision=795819
  http://svn.apache.org/viewvc?view=rev&revision=795822
  http://svn.apache.org/viewvc?view=rev&revision=795824
  http://svn.apache.org/viewvc?view=rev&revision=795838
  http://svn.apache.org/viewvc?view=rev&revision=795860
  http://svn.apache.org/viewvc?view=rev&revision=795902
  http://svn.apache.org/viewvc?view=rev&revision=796016
  http://svn.apache.org/viewvc?view=rev&revision=796017
  http://svn.apache.org/viewvc?view=rev&revision=796030
  http://svn.apache.org/viewvc?view=rev&revision=801601
  http://svn.apache.org/viewvc?view=rev&revision=801637
  http://people.apache.org/~markt/patches/2009-08-06-TLD-improvements-steps-1-4.patch (Steps 1-4)
  +1: markt
  -1: 

* Expose filter configuration via JMX (read-only)
  Based on a patch by Xie Xiaodong as part of GSOC2009.
  http://svn.apache.org/viewvc?rev=802727&view=rev
  +1: markt
  -1: 

* Use platform MBean server rather than creating a new one. Makes it possible to
  connect JConsole and other JMX tools to locally running Tomcat instances
  without any config changes to Tomcat
  http://svn.apache.org/viewvc?rev=677910&view=rev 
  +1: markt
  -1: 

* Add remote JMX listener. Enables JMX to be configured so that it can be used
  with fixed ports. Useful when connecting through a firewall as normally JMX
  uses one fixed and one random port.
  Needs the platform MBean server fix above to be really useful
  http://people.apache.org/~markt/patches/2009-08-12-jmx-remote.patch
  +1: markt
  -1: 

* Make context deployment error message more meaningful
  http://svn.apache.org/viewvc?rev=802940&view=rev
  +1: markt, kkolinko
  -1: 

* Additional patch required for 
  https://issues.apache.org/bugzilla/show_bug.cgi?id=47046
  Clean up Jk components that only exist in the 6.0.x and were hence missed
  https://issues.apache.org/bugzilla/attachment.cgi?id=24125
  +1: markt
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45403
  Add a check when enumerating jar files, and
  do not suppress IO errors when starting a web application.
  Note:
    - tested in normal operation on windows, with unpackWARs="true" and "false"
    - test on linux in normal and failure modes
  http://svn.apache.org/viewvc?rev=804462&view=rev
  http://svn.apache.org/viewvc?rev=804544&view=rev
  +1: kkolinko, markt
  -1:

* Perform deserialization with the context class loader set.
  This ensures that code that actually executes Class.forName(...,classloader) during this phase
  works properly. 
   http://svn.apache.org/viewvc?rev=804057&view=rev
  +1: fhanik, markt, kkolinko
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47158
  Update AccessLogValve and ExtendedAccessLogValve with all the recent threading
  improvements
  http://people.apache.org/~markt/patches/2009-08-15-AccessLogValve-tc6.patch
  +1: markt
  -1: 
