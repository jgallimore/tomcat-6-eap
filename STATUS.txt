================================================================================
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
================================================================================

$Id$

                         =================================
                         Apache Tomcat 6.0 Patch Proposals
                         =================================


RELEASE SHOWSTOPPERS:


PATCHES ACCEPTED TO BACKPORT:
  [ start all new proposals below, under PATCHES PROPOSED. ]

PATCHES PROPOSED TO BACKPORT:
  [ New proposals should be added at the end of the list ]

* Add StuckThreadDetectionValve
  https://github.com/sylvainlaurent/tomcat60/commit/252334f958877221ecb2dc64ee0fd12bb77e360b
  +1: slaurent
  +1: kkolinko: several comments are below
  -1:
  kkolinko: To view/download this as a patch file you add ".diff" to the URL above. That is:
  https://github.com/sylvainlaurent/tomcat60/commit/252334f958877221ecb2dc64ee0fd12bb77e360b.diff

  kkolinko: Minor glitches:
    - In mbeans-descriptors.xml:
      - There are no properties "asyncSupported", "stateName" in TC6 version of this valve.
    - In valve.xml:
      - s/tomcat log/Tomcat log/ (r1345579)
    - In StuckThreadDetectionValve.java:
      - private classes CompletedStuckThread, MonitoredThread: make them static (r1175897)
      - Use Long.valueOf() and explicit boxing/unboxing (r1138132, r1175897)

* Fix autodeployment of applications that have configuration errors.
  If autodeployment fails, create DeployedApplication object and register
  what we deployed (xml or war or dir - a single file) as redeployResource.
  If it is updated the application will be redeployed.
  + ContainerBase patch adds display of failed apps in manager. They can be
  listed and undeployed.
  http://people.apache.org/~kkolinko/patches/2011-11-14_tc6_HostConfig.patch
  http://people.apache.org/~kkolinko/patches/2011-11-14_tc6_ContainerBase.patch
  +1: kkolinko
  +0: kfujino: Question of if host.addChild(context) threw IllegalStateException.
      E.g. case of deployDirectory.
      If META-INF/context.xml exist in Directory, context.xml is copied to configBase.
      If host.addChild(context) threw IllegalStateException, only a directory is 
      registered into redeployResources. Context.xml does not register into redeployResources.
      If manager app execute undeploy(or delete directory), directory is deleted 
      but context.xml isn't deleted.
      Should (conf/Catalina/localhost/)context.xml be registered into redeployResources? 
      Or need to delete context.xml manually? 
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52579
  Propose new implementation of ByteChunk.toStringInternal().
  This fix does not reintroduce issue BZ51400.
  This fix avoids http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=6196991.
  https://issues.apache.org/bugzilla/attachment.cgi?id=28274
  +1: kfujino, fhanik
  -0: markt - https://issues.apache.org/bugzilla/show_bug.cgi?id=52579#c8
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52830
  Lookups using javax.naming.Name fail
  http://svn.apache.org/viewvc?rev=1298635&view=rev
  +1: markt
  +1: fhanik - would have been easier to read if 90% of the patch wasn't document/formatting related
  +1: kkolinko, though see alternative implementation,
       http://svn.apache.org/viewvc?rev=1304468&view=rev
       (explained in https://issues.apache.org/bugzilla/show_bug.cgi?id=52830#c6 )
  -1:

  Additional patch:
  http://svn.apache.org/viewvc?rev=1304468&view=rev
  +1: kkolinko
  -1:

* https://issues.apache.org/bugzilla/show_bug.cgi?id=52811
  Fix parsing of Content-Type
  http://svn.apache.org/viewvc?rev=1300154&view=rev (new HTTP header parser)
  http://svn.apache.org/viewvc?rev=1300155&view=rev (the actual fix)
  (=r1300157+r1300161 in TC7)
  +1: markt
   0: fhanik - introducing a new parser this late into a release seems too risky for 6
  +1: kkolinko: With followups (in trunk: r1304275,1304895; in 7.0.x: r1304897).
        The fix affects response.contentType parsing only. So I think it is
        acceptable. I'd be more concerned if it affected request.contentType
        processing.
  -1:

* Fix bug https://issues.apache.org/bugzilla/show_bug.cgi?id=52858
  http://svn.apache.org/viewvc?rev=1300948&view=rev
  +1: fhanik, markt, rjung
  -1:
  rjung: Isn't this only fixing the regression introduced by 52858 (BZ 53138)
  but 52858 will be again unfixed?
  -1: kkolinko: unless r1340218 is backported as well (I agree with rjung's
      concern). Proposed below.

 Additional patch:
  kkolinko: Regarding r1340218: Note, that "reg" argument in all existing
  calls to processSendfile() is always true. The actual change in this
  revision is registering for OP_WRITE regardless of the value of
  attachment.interestOps()
  http://svn.apache.org/viewvc?view=revision&revision=1340218 (fix BZ 53138)
  http://svn.apache.org/viewvc?view=revision&revision=1342468 (cleanup)
  +1: kkolinko
  -1:
  
* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52918
  Add WebSocket support to Tomcat 6
  +1: fhanik

* Backport UserDataHelper class (issue 52184)
  Provide greater control over the logging of errors triggered by invalid
  input data (i.e. data over which Tomcat has no control).

  Note: cookies logging (o.a.t.util.http.Cookies) does not need to be
  addressed in Tomcat 6, because all logging in that class here is done at
  debug level.

  http://people.apache.org/~kkolinko/patches/2012-03-26_tc6_UserDataHelper.patch
  (includes a new file, copied from trunk:
  svn cp ../../trunk/java/org/apache/tomcat/util/log/UserDataHelper.java@1242371 java/org/apache/tomcat/util/log/UserDataHelper.java
  )
  +1: kkolinko
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=53267
  Ensure that using the GC Daemon Protection feature of
  the <code>JreMemoryLeakPreventionListener</code> does not trigger a
  full GC every hour.
  http://svn.apache.org/viewvc?view=revision&revision=1343895
  (r1343897 in TC7)
  +1: kkolinko, kfujino, markt
  -1:

* For https://issues.apache.org/bugzilla/show_bug.cgi?id=52055
  Ensure that filters are recycled.
  Inspired by r1334790 (TC7), r565964 (TC6 Nio)
  I do not have evidence that this change matters, but it should not hurt.
  The nextRequest() method already recycles the filters. If it has been called,
  then lastActiveFilter is -1 and the new code will be NOOP.
  http://people.apache.org/~kkolinko/patches/2012-06-02_tc6_recycle.patch
  +1: kkolinko
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=53119
  Prevent buffer overflow errors being reported when a
  client disconnects before the response has been fully written from an
  AJP connection using the APR/native connector.
  (Make sure the buffer is cleared on write error to prevent possible
  overflow if it is written to again before the connection is closed).
  https://issues.apache.org/bugzilla/attachment.cgi?id=28890
  It is backport of r1344253
  +1: kkolinko
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=52850
  Extend memory leak prevention and detection code to
  work with IBM as well as Oracle JVMs. Based on patch provided by Rohit Kelapure.
  https://issues.apache.org/bugzilla/attachment.cgi?id=28893
  +1: kkolinko
  -1:

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=53050
  Fix XOR arithmetics and charset issue when calculating entropy to
  initialize random numbers generator in session manager. Based on
  proposal by Andras Rozsa.
  https://issues.apache.org/bugzilla/attachment.cgi?id=28894
  +1: kkolinko
  -1:


PATCHES/ISSUES THAT ARE STALLED

* Backport JSP unloading patch (BZ48358).
  The patch has substantially changed since the original version.
  Original revisions are: 937787, 1028377, 1028389, 1028396, 1028861, 1028862, 1028863,
  1028935, 1028939, 1028940, 1028944, 1028950, 1030014, 1030037
  Combined TC 6 patch:
  http://people.apache.org/~rjung/patches/BZ48358-JSP_Unloading-TC6_20101118.patch
  +1: rjung
  -0: markt - http://markmail.org/thread/777be426ulcfmdd3 suggests there may be
              a memory leak in this code somewhere. I'd like to get to the
              bottom of that before porting this
      rjung:  I started a discussion about JSPs and memory on the dev list.
              The updated patch fixes a race condition.
              We can stall this item until we get some feedback about 7.0.5.
      markt - r1172614 needs to be included in this proposal. With that patch,
              my testing shows that the unloading works as designed
  -1:
