================================================================================
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
================================================================================

$Revision$ $Date$

                         =================================
                         Apache Tomcat 6.0 Patch Proposals
                         =================================


RELEASE SHOWSTOPPERS:


PATCHES ACCEPTED TO BACKPORT:
  [ start all new proposals below, under PATCHES PROPOSED. ]

PATCHES PROPOSED TO BACKPORT:
  [ New proposals should be added at the end of the list ]

* Fix issue where the first request for a deleted JSPs returns as if the JSP
  still exists.
  http://svn.apache.org/viewvc?view=rev&revision=683969
  +1: markt, funkman
   0: remm (looks risky, very minor problem), fhanik - minor problem
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=45403
  See commit message for details of negligable performance impact
  http://svn.apache.org/viewvc?rev=701358&view=rev
  +1: markt, funkman
  -0: remm (I also do not think the patch is a good idea as a backport)
  -0: fhanik - the bug talks about WEB-INF/lib and reload, that would be when reload="true" which should be considered development only
      So to make this bug actually worth while fixing, and not impact performance, then it should only do this check on files that 
      are relevant to the reload of an application, in other words a watched resource

* Backport cleanup of semantics of thisAccessedTime and
  lastAccessedTime for sessions:
  - preparational whitespace changes
    http://svn.apache.org/viewvc?rev=711695&view=rev
  - Give thisAccessedTime and lastAccessedTime for sessions
    a clear semantics:
    http://svn.apache.org/viewvc?rev=711711&view=rev
    - thisAccessedTime will be updated at the beginning and
      at the end of session use
    - lastAccessedTime will only be updated at the end of
      session use
    This means:
    - lastAccessedTime is the last access time of a session
      disregarding any request still being processed on.
      So this is good to use even from within a request
      to detect when its own session has been used last before.
    - thisAccessedTime already gets updated when a new request 
      disregarding any request still being processed on.
      So this is better for any idleness check or information.
    - thisAccessedTime >= lastAccessedTime always
  - Port from StandardSession to DeltaSession
    http://svn.apache.org/viewvc?rev=711714&view=rev
  - Expose thisAccessedTime via the session interface
    and ManagerBase, so we can use it from outside the session.
    http://svn.apache.org/viewvc?rev=711716&view=rev
  - Make the classes checking session idleness use thisAccessedTime.
    http://svn.apache.org/viewvc?rev=711720&view=rev
    This is not for invalidation, only for displaying
    idle times and making persistance decisions.
  +1: rjung, markt
   0: billbarker: generally agree with remm that this is too big of a change for the stable branch
                 but could agree to some of it if it was split into parts
  -1: remm: no for TC 6.0
  -1: funkman : api change in Session.java for .x.x release

* Fix Close Stream at WebappClassLoader after read error
  http://svn.apache.org/viewvc?rev=772872&view=rev 
  +1: pero, funkman
  -0: kkolinko: http://marc.info/?l=tomcat-dev&m=124192105131636&w=2
  -1:

* Add missing svn properties
  http://people.apache.org/~rjung/patches/tc6-svnprops.patch
  +1: rjung, fhanik, markt,funkman
  -1: 

* Fix for https://issues.apache.org/bugzilla/show_bug.cgi?id=43343
  Additional fixes for case B. Don't swap out session if one or more requests
  are currently using it.
  http://svn.apache.org/viewvc?rev=778523&view=rev
  http://svn.apache.org/viewvc?rev=778524&view=rev
  +1: markt,funkman
  +1: kkolinko: (
     good, I tested it and it fixes the issue,
     but I have the following comments:

     1. It works only if StandardSession.ACTIVITY_CHECK is true.
     And that occurs only if one of the following properties is "true":

       org.apache.catalina.session.StandardSession.ACTIVITY_CHECK
       org.apache.catalina.STRICT_SERVLET_COMPLIANCE

     Both are "false" by default, and that results in NullPointerException
     because StandardSession.accessCount is null in that case.

     That is expected, and just needs to be documented.
     Though some IllegalStateException might be better than NPE.

     Also maybe direct access to session.accessCount (a protected field of
     a class in the same package) is not a good style.

     2. In PersistentManagerBase.processMaxIdleSwaps():
     there is already the following line:
       "StandardSession session = (StandardSession) sessions[i];"

     Thus, there is no need for "if (sessions[i] instanceof StandardSession)" check
     in your patch, and you can access "session" instead of "session[i]".

     I think that "instanceof StandardSession" is a requirement, like
     ACTIVITY_CHECK one above, and thus it is no need for "instanceof"
     check. Just do a cast.

     3. PersistentValve class has "session.access()" call that I do not see
     how is balanced with "endAccess()". A reference to that session is just lost
     and not stored in a Request (that would release it in its recycle() method),
     so I think that additional "endAccess()" call is needed there. I have no
     experience with that class, though.

  )
  -1: 
* Additional patch based on review comments above:
  http://svn.apache.org/viewvc?rev=784453&view=rev
  +1: markt
  +1: kkolinko (ok, comments 1&2 addressed; for PersistentValve (3.) I
  propose an additional patch below)
  -1:
* Additional patch:
  Do not increment access counter in PersistentValve
  http://svn.apache.org/viewvc?rev=784602&view=rev
  +1: kkolinko, markt
  -1:


* Add Executor JMX stats
   http://svn.apache.org/viewvc?rev=783474&view=rev
  +1: fhanik, markt
  +1: kkolinko (
     in activeCount description:  s/current/currently/
     in completedTaskCount desc.: s/Nr/Number/ or /Count/. Was there a reason for shortening?
  )
  -1: 

* Dont try to report thread counts when using an executor from outside
  http://people.apache.org/~fhanik/connector-thread-report.patch
  +1: fhanik, markt
  -1: 
  -1: kkolinko: (
     1. Why such short implementation for JIoEndpoint, AprEndpoint and
        such elaborated one for NioEndpoint?
fhanik: NioEndpoint only uses Executors, it's removed the 'synchronized' based thread pool.
kkolinko: Thanks for explaining, but for 6.0 code that is not true:
        The NioEndpoint.getWorkerThread() method does exist in 6.0,
        so your patch will break the thing, thus my -1.
        I do not know whether it is actually used. Maybe you can remove
        workers support from 6.0.

        There could be "return curThreads[Busy];" instead of "return -2;" in your patch.


        Is there a reason why JIoEndpoint, AprEndpoint are not
        implemented in the same way?
fhanik: there was a notion that the Tomcat thread pool was faster, hence the old one is still there
kkolinko:  I mean: why not to ask ThreadPoolExecutor for the values,
        like the NioEndpoint part of the patch does?


     2. Http11Processor calls JIoEndpoint.getCurrentThreadsBusy():

        int threadRatio = (endpoint.getCurrentThreadsBusy() * 100)
                / endpoint.getMaxThreads();

        The threadRatio value will be negative, if the patch is applied as
        is. Well, that makes no much difference from zero value w/o the patch.
fhanik: That is a great point, This is an important observations that warrants another patch, independent of this one
  )

* Fix download task dependency for commons-pool and commons-dbcp.
  http://svn.apache.org/viewvc?rev=783762&view=rev
  +1: kkolinko, markt
  -1: 

* Make diagnosing broken requests a little easier
  http://svn.apache.org/viewvc?rev=783724&view=rev
  +1: markt
  +1: fhanik - StringBuffer never hurts
  -1: kkolinko: (
    Regarding the first part of the patch:
     Try http://localhost:8080/examples/servlets/servlet/RequestParamExample?firstname=&lastname=&&&&
     The "Invalid chunk" message prints garbage.

     I wonder, whether I can trigger an NPE here.

     There should be
       msg.append(new String(bytes, nameStart, valEnd-nameStart));

     But if I make that change, it prints just an empty string:
     WARNING: Parameters: Invalid chunk '' ignored.
     and that is not very informative.

     Actually, I do not see how "Invalid chunk" can be triggered, unless
     there is "&&" in the query string, and in that case the chunk is empty.

     Also, I would prefer StringBuilder in code that runs on 1.5+ JVM.

   Regarding the second part:
     Try http://localhost:8080/examples/servlets/servlet/RequestParamExample?firstname=%EC%E0%F8%E&lastname=%F1%E0%F8%E0

     The following is printed, and contains garbage:
     WARNING: Parameters: Character decoding failed. Parameter 'firstname' with value '???%E0%F8%E' has been ignored.

     Also, if there is encoding error, e.g. I have URIEncoding="UTF-8" on my connector,
     but I try submitting in windows-1251, like
     http://localhost:8080/examples/servlets/servlet/RequestParamExample?firstname=%EC%E0%F8%E0&lastname=%F1%E0%F8%E0
     nothing is printed at all. I am not against this feature,
     but we may want to adjust the text of the message.
  )

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47343
  Regression in fix for
  https://issues.apache.org/bugzilla/show_bug.cgi?id=42747
  http://svn.apache.org/viewvc?view=rev&revision=783766
  Editing context.xml should not delete resources
  +1: markt, fhanik
  -1: 

* Document emptySessionPath behavior
  Behavior is too old to change the way bug specifier requested, and obsolete in TC 7
  http://svn.apache.org/viewvc?rev=783837&view=rev
  https://issues.apache.org/bugzilla/show_bug.cgi?id=47298
  +1: fhanik
  +1: markt - MarkMail provides permalinks you can use
            - Doc changes have been using CTR even on release branches 
  +1: kkolinko
  -1: 

* Provide documentation for deployer.
  It is a fix for "cannot copy" warning observed during building a release.
  http://svn.apache.org/viewvc?rev=783863&view=rev
  +1: kkolinko, markt
  -1: 

* Update the build scripts, because there are no 64-bit GUI binaries.
  (Fixes release build failure caused by 
    http://svn.apache.org/viewvc?view=rev&revision=779930
  )
  Discussion: http://markmail.org/message/nhkrskh6bwyirwru
  http://svn.apache.org/viewvc?rev=783934&view=rev
  +1: kkolinko, markt
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=47369.
  http://svn.apache.org/viewvc?rev=784879&view=rev
  +1: fhanik
  -1: 

* Fix https://issues.apache.org/bugzilla/show_bug.cgi?id=37794
  Handle chunked POSTs. If maxPostSize is exceeded, a 500 results
  http://svn.apache.org/viewvc?rev=785381&view=rev
  +1: markt
  -1: 

* Disable the code that detects the value for compilerSourceVM, compilerTargetVM options,
  because we know that this version of Tomcat cannot run on JDK 1.4.
  http://svn.apache.org/viewvc?rev=785768&view=rev
  http://svn.apache.org/viewvc?rev=785859&view=rev
  +1: kkolinko
  -1:

